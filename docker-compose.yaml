version: '3.8'

services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: intdb

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: always
    ports:
      - '8082:8081'
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis

  node:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node-app
    restart: always
    ports:
      - '3000:3000'
      - '9801:9800'
      - '9220:9229'
    volumes:
      - ./:/usr/src/app/
    working_dir: /usr/src/app
    environment:
      PORT: 3000
      MONGO_DB_HOST: mongodb
      MONGO_DB_PORT: 27017
      MONGO_DB_NAME: intdb
      MONGO_DB_USER: admin
      MONGO_DB_PASSWORD: admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_API_CACHE_TTL: 60
    depends_on:
      - mongodb
      - redis

volumes:
  mongo_data:
  redis_data: